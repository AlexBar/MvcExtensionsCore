@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Microsoft.AspNetCore.Mvc.ViewFeatures
@if (ViewData.TemplateInfo.TemplateDepth > 5)
{
    @(Model == null ?
        ViewData.ModelMetadata.NullDisplayText :
        ViewData.ModelMetadata.SimpleDisplayProperty)
}
else
{
    Func<ModelExplorer, TemplateInfo, bool> shouldShow =
        (modelExplorer, templateInfo) =>
            modelExplorer.Metadata.ShowForEdit &&
            !templateInfo.Visited(modelExplorer);

    var tplInfo = ViewContext.ViewData.TemplateInfo;

    var properties = from property in ViewData.ModelExplorer.Properties
                     let propertyMetadata = property.Metadata
                     where shouldShow(property, tplInfo)
                     select propertyMetadata;

    foreach (ModelMetadata prop in properties)
    {
        if (prop.HideSurroundingHtml)
        {
            @Html.Editor(prop.PropertyName)
        }
        else
        {
            <div class="form-group">
            @{ 
                var dn = prop.GetDisplayName();
                if (!string.IsNullOrEmpty(dn))
                {
                    @Html.Label(prop.PropertyName, null, new { data_text = prop.Description })
                }
            }

                @Html.Editor(prop.PropertyName, new { htmlAttributes = new { placeholder = prop.Placeholder, @class = "form-control" } })
                @Html.ValidationMessage(prop.PropertyName, null, new { @class = "form-text text-danger" })
            </div>
        }
    }
}